keymap = {
    "#version": "2.6.0",
    "#config": {
      "uimode": "tab",
      "layout": "pc",
      "layers": 3,
      "view": "k",
      "kbsize": 1,
      "kbext": true,
      "kbhint": true,
      "showall": false,
      "ks1": 0.75,
      "kw1": 3,
      "kh1": 3,
      "ks2": 0.9,
      "kw2": 5,
      "kh2": 5,
      "kt2": 0.75,
      "c0": "black",
      "c1": "lightblue",
      "c2": "lightseagreen",
      "c3": "black",
      "c4": "whitesmoke",
      "kb-bgc": "lightgray",
      "kb-bdc": "gray",
      "cols": 2,
      "extkeys": [
        "#鼠标",
        "LB",
        "RB",
        "MB",
        "WhlUp",
        "WhlDn",
        "#扩展",
        "XK1",
        "XK2",
        "XK3",
        "XK4",
        "__CR/LF__",
        "#Fn",
        "F13",
        "F14",
        "F15",
        "F16",
        "F17",
        "F18",
        "F19",
        "F20"
      ],
      "modkeys": [
        "Caps",
        "caps",
        "XK1"
      ],
      "modkey_colors": {
        "Alt": "#e53935",
        "Ctrl": "#00c853",
        "Shift": "#1976d2",
        "Win": "#7c4dff",
        "RAlt": "#e53935/",
        "RCtrl": "#00c853/",
        "RShift": "#1976d2/",
        "opt": "#e53935",
        "ctrl": "#00c853",
        "shift": "#1976d2",
        "cmd": "#7c4dff",
        "r-opt": "#e53935/",
        "r-ctrl": "#00c853/",
        "r-shift": "#1976d2/",
        "r-cmd": "#7c4dff/",
        "fn": "#ffc400"
      },
      "modkey_chars": {
        "Alt": "A",
        "Ctrl": "C",
        "Shift": "S",
        "Win": "W",
        "RAlt": "a",
        "RCtrl": "c",
        "RShift": "s",
        "opt": "o",
        "ctrl": "c",
        "shift": "s",
        "cmd": "m",
        "r-opt": "O",
        "r-ctrl": "C",
        "r-shift": "S",
        "r-cmd": "M",
        "fn": "f"
      },
      "modkey_mode": "chr",
      "modkey_clr": true,
      "mod-cs2": 0.7,
      "mod-ds2": 0.5,
      "layer_names": {
        "#0": "帮助",
        "#1": "更多",
        "#2": "分组、修饰键、颜色"
      },
      "group": true,
      "group_colors": {
        "g1": "#ACE1AF",
        "g2": "#F7CAC9",
        "g3": "#E7E28C",
        "g4": "#BFBD50",
        "g5": "#DCAE96",
        "g6": "#FAA052",
        "g7": "#8ED449",
        "g8": "#F2CB07",
        "g9": "#BBBBBB"
      },
      "comment-font-size": 0.9,
      "show_comment": true
    },
    "#NAME": "* 帮助",
    "#0": {
      "1": "* 键盘层 1\n::g1",
      "2": "* 键盘层 2\n::g2",
      "3": "* 键盘层 3",
      "4": "* 键盘层 4",
      "5": "* 键盘层 5",
      "6": "* 键盘层 6",
      "7": "* 键盘层 7",
      "8": "* 键盘层 8",
      "9": "* 键盘层 9",
      "`": "* 键盘层 0",
      "Q": "* 60% 键盘",
      "W": "* 80% 键盘",
      "E": "* 标准键盘",
      "R": "* 隐藏主键盘",
      "X": "* 显示扩展键区",
      "Shift+X": "隐藏扩展键区",
      "shift+X": "隐藏扩展键区",
      "C": "* 显示备注框",
      "Shift+C": "隐藏备注框",
      "shift+C": "隐藏备注框",
      "Tab": "* 开启键帽提示\n  在键帽上显示主映射信息",
      "Shift+Tab": "关闭键帽提示",
      "tab": "* 开启键帽提示\n  在键帽上显示主映射信息",
      "shift+Tab": "关闭键帽提示",
      "K": "* “键图”页",
      "L": "* “键表”页",
      ";": "* “数据”页",
      "P": "* 单页模式\n  将键图和键表显示在一个长页面内，简化页面，隐藏操作台（以便打印）",
      "Shift+P": "分页模式\n  将键图和键表显示在不同分页，提供完整操作界面",
      "shift+P": "分页模式\n  将键图和键表显示在不同分页，提供完整操作界面",
      "M": "* Mac键盘布局",
      "Shift+M": "PC键盘布局",
      "shift+M": "PC键盘布局",
      "F": "* 显示全部映射\n  显示 包含“非本键盘按键”的映射信息\n  当组合键中包含有“非本键盘按键”时，受本开关控制。",
      "Shift+F": "关闭显示全部映射",
      "shift+F": "关闭显示全部映射",
      "F2": "* 键盘层改名\n  也可以双击键盘层名进行修改",
      "LB": "* 设置映射",
      "RB": "* 筛选映射\n  键图：突出显示组合键中包含选中键的那些键帽\n  键表：只显示选中键相关的映射信息\n  按 p 切换到单页模式后会有更直观的感受",
      "Ctrl+RB": "多键筛选\n可同时选择多个键进行筛选，结果为同时包含这些键的组合键",
      "Ctrl+O": "* 从文件载入",
      "Ctrl+S": "* 保存至文件",
      "Ctrl+P": "生成单页模式图片",
      "#comment": "【备注】这里是备注框，可以为每个键盘层备注信息。\n\n【试验】这是一个虚拟的键谱，你可以在这里试验各种操作，重新载入“* 帮助”即可恢复原样。\n\n【帮助】（层 1 有更多帮助，按 1 切换）\n  * 点击顶部的“键谱名”，可以新建和切换键谱。\n  * 点击键盘图中的按键，可以录入按键映射信息。\n  * 组合键：在录入时可以选择组合修饰键（Alt、Ctrl、Shift、Win ...）。\n  * 一个按键上可以录入多组组合键。\n  * 映射信息以\"* \"（星号+空格）开头的组合键定义为主映射，在“键帽提示”模式下会在键帽上显示第一行文字，并且主映射的组合键会直接显示在键帽上。\n  * 可以自定义扩展键、修饰键。\n  * 可以设置键盘层数，无上限（嗯，大概吧），可以自定义键盘层名。\n  * 每个键谱的当前状态都会实时保存（除了“当前键盘层”），在下次打开时会自动恢复。因此，可以为每个键谱设置不同的显示风格。\n\n【谱匣】通过谱匣程序使用键谱时，可以使用命令行参数自定义载入的键谱及界面。不需提供所有参数，未提供的参数会按键谱中保存的状态显示。\n  -P 键谱名\n  -L 键盘层 : [0~9]\n  -V 视图 : [k/l/j] 键图 / 键表 / 数据\n  -S 主键盘大小 : [0~3] 隐藏 / 60% / 80% / 标准\n  -X 扩展键区 ：[0/1] 关闭 / 打开\n  -H 键帽提示 : [0/1] 关闭 / 打开\n  -M 界面模式 : [t/s] 分页 / 单页\n  示例：打开键谱“Photoshop”，切换到层2，显示键图，60%键盘大小，关闭扩展键区，打开键帽提示，单页模式。\n    keymap.exe -P Photoshop -L 2 -V k -S 1 -X 0 -H 1 -M s\n\n【彩蛋】右上的“简单”不简单 ;-)\n"
    },
    "#1": {
      "Space": "* 多组映射",
      "Alt+Space": "组合键1(PC)",
      "Alt+Shift+Space": "组合键2(PC)",
      "opt+Space": "组合键3(Mac)",
      "opt+shift+Space": "组合键4(Mac)",
      "XK1": "* 自定义扩展键",
      "Caps+A": "* 自定义修饰键(PC)\n  可以在设置中增加自定义修饰键。",
      "caps+A": "* 自定义修饰键(Mac)\n  可以在设置中增加自定义修饰键。",
      "Tab": "* 这是 PC 布局",
      "tab": "* 这是 Mac 布局",
      "Win": "* 这是 PC 布局",
      "opt": "* 这是 Mac 布局",
      "XK1+Z": "* 扩展键做修饰键",
      "#comment": "指向各个按键可以看到不同信息。\n\n* 键盘布局：按 m / Shift+m 切换布局\n  PC 和 Mac 有些键是不同的，基本上除字母键、Fn键外的键都不同。\n\n* 所有映射：按 f / Shift+f 开关\n  显示/隐藏 包含“非本键盘按键”的映射信息\n  当组合键中包含有“非本键盘按键”时，受本开关控制。\n  受影响：键表 / 映射信息设置时的修饰键列表 / 指向按键时显示的映射信息\n\n* 自定义扩展键：\n  * 键名以英文逗号(,)分隔\n  * 以 \"#\" 开头的会以纯文字显示\n  * 单个 \"#\" 显示一个键位大小的空白\n  * 支持换行，每行代表一行扩展键\n  * 不含扩展键的行会忽略（包括空行和只有逗号的行）\n\n* 自定义修饰键：\n  * 每个键名以英文逗号(,)分隔\n  * 获取键名：鼠标点击按键，弹出的设置映射信息对话框内左上角\n  * 支持使用扩展键作为修饰键\n  * 甚至可以指定不存在的键名作为修饰键：\n    这种修饰键只在“所有映射”开关打开时才使用，包含这种修饰键的映射信息也只在“所有映射”开关打开时才可见\n\n* 筛选：\n  * 右键点击按键，可以筛选包含该键的组合键\n  * 按住 \"Ctrl\" 可同时选择多个键进行筛选，结果为同时包含这些键的组合键\n"
    },
    "#2": {
      "Alt+1": "* 未分组",
      "Ctrl+Q": "* 未分组 …",
      "Shift+A": "* 未分组",
      "Win+Z": "* 未分组",
      "Alt+Ctrl+3": "* 组1\n::g1",
      "Ctrl+Shift+E": "组1，但不是主映射，所以键帽不显示分组色\n::g1",
      "Shift+Win+D": "* 组1 …\n::g1",
      "RAlt+Win+C": "* 组1\n::g1",
      "Alt+Ctrl+Shift+5": "* 组2\n::g2",
      "Ctrl+Shift+Win+T": "* 组2 …\n::g2",
      "RAlt+Shift+Win+G": "* 组2\n::g2",
      "RAlt+RCtrl+Win+B": "* 组2\n::g2",
      "Ctrl+RShift+D": "组3，但不是主映射\n::g3",
      "Ctrl+Shift+Q": "组1，但不是主映射，所以键帽不显示分组色\n::g1",
      "RCtrl+Shift+Win+T": "组4\n::g4",
      "Ctrl+RShift+Win+T": "组5\n::g5",
      "#comment": "【分组】\n  * 分组方法：组合键映射信息的最末行以两个引号 \"::\" 开头，后接组名\n  * 需要在设置中启用“分组颜色”\n  * 启用后，键帽显示主映射的分组颜色，无主映射或未分组的键帽显示未分组颜色\n  * 启用后，键表中的映射组合键也会以分组颜色为背景色\n  * 自定义分组颜色：\"组名1::颜色值1, 组名2::颜色值2, ...\"\n  * 可以修改未分组颜色，设置组名为空的自定义颜色：\"::颜色值\"\n\n【修饰键】\n  * 如果一个键上有主映射，那么该组合键的所有修饰键会同时显示在键帽上\n  * 键帽上修饰键的显示模式有三种：\n    * 键名：修饰键的键名\n    * 缩写：键名的缩写，一般为一个字母\n    * 仅颜色：启用修饰键颜色后，显示修饰键对应颜色的小方块\n  * 自定义缩写：键名1::缩写1, 键名2::缩写2, ...\n    对未设置缩写的修饰键，默认为键名首字母\n  * 自定义颜色：键名1::颜色1, 键名2::颜色2, ...\n    颜色支持两种格式：颜色值，左上颜色值/右下颜色值\n    * 单色格式：\n      整个修饰键一种背景色\n    * 双色格式：\n      修饰键的背景色由 左上/右下 两个颜色组合，各占 50%\n      颜色可以为空，为空部分为白色，且占比缩小为 20%\n  * 启用修饰键颜色后，所有修饰键显示均会使用定义的背景颜色\n    对未设置颜色的修饰键，默认为透明背景\n  * 颜色和显示模式可以随意组合\n"
    },
    "#3": {},
    "#4": {},
    "#5": {},
    "#6": {},
    "#7": {},
    "#8": {},
    "#9": {}
};
Keymap.loadJSON(JSON.stringify(keymap));
UI.present();